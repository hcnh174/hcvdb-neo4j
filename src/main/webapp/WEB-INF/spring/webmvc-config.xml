<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<mvc:annotation-driven conversion-service="neo4jConversionService"/>

	<context:component-scan base-package="ch.ralscha.extdirectspring"/>

	<context:component-scan base-package="edu.hiro.hcv.web" use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
	</context:component-scan>

	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources -->
	<mvc:resources location="/images/" mapping="/images/**"/>
	<mvc:resources location="/css/" mapping="/css/**"/>
	
	<!-- Allows for mapping the DispatcherServlet to "/" by forwarding static resource requests to the container's default Servlet -->
	<mvc:default-servlet-handler/>
	
	<!-- register "global" interceptor beans to apply to all registered HandlerMappings -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor"/>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" p:paramName="lang"/>
	</mvc:interceptors>
	
	<!-- selects a static view for rendering without the need for an explicit controller -->
	<!--
	<mvc:view-controller path="/" view-name="index"/> 
	<mvc:view-controller path="/uncaughtException"/>
	<mvc:view-controller path="/resourceNotFound"/>
	<mvc:view-controller path="/dataAccessFailure"/>
 	-->
 
	<!-- Resolves localized messages*.properties and application.properties files in the application to	allow for internationalization. 
		The messages*.properties files translate Roo generated messages which are part of the admin interface, the application.properties
		resource bundle localizes all application specific messages such as entity names and menu items.
	<bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource" id="messageSource" p:basenames="WEB-INF/i18n/messages,WEB-INF/i18n/application" p:fallbackToSystemLocale="false"/>
	 -->
	 
	<!-- store preferred language configuration in a cookie -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" p:cookieName="locale"/>	

	<!-- This bean resolves specific types of exceptions to corresponding logical - view names for error views. 
	     The default behaviour of DispatcherServlet - is to propagate all exceptions to the servlet container: 
	     this will happen - here with all other types of exceptions. 
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" p:defaultErrorView="uncaughtException">
		<property name="exceptionMappings">
			<props>
				<prop key=".DataAccessException">dataAccessFailure</prop>
				<prop key=".NoSuchRequestHandlingMethodException">resourceNotFound</prop>
				<prop key=".TypeMismatchException">resourceNotFound</prop>
				<prop key=".MissingServletRequestParameterException">resourceNotFound</prop>
			</props>
		</property>
	</bean>
	-->
	
	<!-- enable this for integration of file upload functionality -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

<!-- 
	<bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML5" />
		<property name="order" value="1"/>
	</bean>
	
	<bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
	</bean>
	
	<bean class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
	</bean>
 -->
	 
	<bean id="freemarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix" value=".ftl"/>
		<property name="cache" value="true"/>
		<property name="exposeSpringMacroHelpers" value="true"/>
		<property name="order" value="1"/>
		<property name="contentType" value="text/html;charset=UTF-8"/>
	</bean>
	
	<bean id="freemarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/freemarker/"/>	
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	 
	<!-- 
	<bean id="registerFreemarkerExceptionHandler" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject">
			<bean class="edu.hiro.hcv.util.FreemarkerExceptionHandler">
				<property name="freemarkerConfigurer" ref="freemarkerConfigurer"/>
			</bean>
		</property>
		<property name="targetMethod" value="registerHandler"/>
	</bean>
	 -->
	 
		
<!-- 	<bean id="wroFilter" class="ro.isdc.wro.http.ConfigurableWroFilter"> -->
<!-- 	  <property name="debug" value="${application.wrofilter.debug}"/> -->
<!-- 	  <property name="cacheUpdatePeriod" value="${application.wrofilter.cache-update-period}"/> -->
<!-- 	  <property name="modelUpdatePeriod" value="${application.wrofilter.model-update-period}"/> -->
<!-- 	</bean> -->
	
	<!-- 
	<bean id="wroFilter" class="ro.isdc.wro.http.ConfigurableWroFilter">
	  <property name="properties" ref="wroProperties"/>
	</bean>
	
	<bean id="wroProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">  
	    <property name="location" value="classpath:wro.properties" />  
	</bean> 
	 -->
</beans>
